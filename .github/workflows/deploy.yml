name: CI/CD to AWS Lambda (Serverless)

on:
  push:
    branches:
      - dev
      - qa
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "STAGE==${{github.ref_name}}" >> .env
          cat .env
        
      - name: Set Environment Variables
        run: |
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          echo "STAGE=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "STAGE is set to: ${{ github.ref_name }}"          
          echo "Using STAGE: $STAGE"

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Clean and Build NestJS application
        run: |
          rm -rf dist
          npm run build
      - name: Debug stack name
        run: |
          echo "Stack name: nestjs-app-${ENVIRONMENT}"
      - name: Package for AWS Lambda
        run: |
          echo $STAGE
          serverless package --stage $STAGE

      - name: Move to serverless
        run: |
          mv .serverless serverless 
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: deploy-package
            path: ${{ github.workspace }}/serverless
            if-no-files-found: error
            include-hidden-files: true


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy-package
          path: serverless

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install Serverless Framework
        run: npm install -g serverless@3
        
      - name: Install serverless-dotenv-plugin
        run: npm install serverless-dotenv-plugin --save-dev

      - name: Set Deployment Stage
        run: |
          echo "STAGE=${{ github.ref_name }}" >> $GITHUB_ENV
          echo $STAGE
  
      - name: Deploy to AWS Lambda
        run: |
          echo $STAGE
          serverless deploy --stage $STAGE --package serverless
      


      

      